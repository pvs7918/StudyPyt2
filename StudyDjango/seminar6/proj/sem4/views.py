import random

from django.shortcuts import render
from .forms import GameForm

import logging

from .models import Author, Post

logger = logging.getLogger(__name__)


# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ1
# üìå –î–æ—Ä–∞–±–æ—Ç–∞–µ–º –∑–∞–¥–∞—á—É –ø—Ä–æ –±—Ä–æ—Å–∫–∏ –º–æ–Ω–µ—Ç—ã, –∏–≥—Ä–∞–ª—å–Ω–æ–π –∫–æ—Å—Ç–∏ –∏
# —Å–ª—É—á–∞–π–Ω–æ–≥–æ —á–∏—Å–ª–∞.
# üìå –°–æ–∑–¥–∞–π—Ç–µ —Ñ–æ—Ä–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å: –º–æ–Ω–µ—Ç–∞, –∫–æ—Å—Ç–∏,
# —á–∏—Å–ª–∞.
# üìå –í—Ç–æ—Ä–æ–µ –ø–æ–ª–µ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —É–∫–∞–∑–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –æ—Ç 1 –¥–æ 64.

def coin(request, count):
    coins = []
    for i in range(1, count + 1):
        cur_coin = random.choice(["–û—Ä–µ–ª", "–†–µ—à–∫–∞"])
        coins.append(cur_coin)
    return render(request, 'sem4/result_game.html',
                  {
                      'result': coins,
                      'game': '—Å—Ç–æ—Ä–æ–Ω–∞ –º–æ–Ω–µ—Ç—ã - '
                  })


def cube(request, count):
    res_list = []
    for i in range(1, count + 1):
        attemp = random.randint(1, 7)
        res_list.append(attemp)

    return render(request, 'sem4/result_game.html',
                  {
                      'result': res_list,
                      'game': '—Å—Ç–æ—Ä–æ–Ω–∞ –∫—É–±–∞ - '
                  })


def number_random(request, count):
    numbers = (str(random.randint(0, 101)))
    return render(request, 'sem4/result_game.html',
                  {
                      'result': numbers,
                      'game': '—Å—Ç–æ—Ä–æ–Ω–∞ –º–æ–Ω–µ—Ç—ã - '
                  })


# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ2
# üìå –î–æ—Ä–∞–±–æ—Ç–∞–µ–º –∑–∞–¥–∞—á—É 1.
# üìå –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã–≤–æ–¥–∏—Ç —Ñ–æ—Ä–º—É –≤—ã–±–æ—Ä–∞.
# üìå –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ
# –≤—ã–∑—ã–≤–∞–µ—Ç –æ–¥–Ω–æ –∏–∑ —Ç—Ä—ë—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π, —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –Ω–∞
# –ø—Ä–æ—à–ª–æ–º —Å–µ–º–∏–Ω–∞—Ä–µ (–µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—à–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É, –∫–æ–Ω–µ—á–Ω–æ
# –∂–µ).

def form_game(request):
    if request.method == 'POST':
        form = GameForm(request.POST)  # —Å–æ–∑–¥–∞–µ–º —Ñ–æ—Ä–º—É —Å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        if form.is_valid():
            # –ï—Å–ª–∏ —Ñ–æ—Ä–º–∞ –ø—Ä–æ—Ö–æ–¥–∏—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—é(–≤—Å–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ), —Ç–æ –º—ã –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            # –∏–∑ —Ñ–æ—Ä–º—ã –∏ –º–æ–∂–µ–º —Å –Ω–∏–º–∏ —Ä–∞–±–æ—Ç–∞—Ç—å.
            game = form.data['selected_game']
            quantity = form.data['quantity']
            # –î–µ–ª–∞–µ–º —á—Ç–æ-—Ç–æ —Å –¥–∞–Ω–Ω—ã–º–∏
            logger.info(f'–ü–æ–ª—É—á–∏–ª–∏ {game=}, {quantity=}.')

            if game == 'coin':
                return coin(request, quantity)
            if game == 'cube':
                return cube(request, quantity)
            if game == 'number_random':
                return number_random(request, quantity)
    else:
        # –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –ø—Ä–∏—à–µ–ª –º–µ—Ç–æ–¥–æ–º GET, —Ç–æ –º—ã –ø—Ä–æ—Å—Ç–æ —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Ñ–æ—Ä–º—ã UserForm
        # –∏ –ø–µ—Ä–µ–¥–∞–µ–º –µ–≥–æ –≤ —à–∞–±–ª–æ–Ω user_form.html.
        form = GameForm()
        # –í —à–∞–±–ª–æ–Ω–µ user_form.html –º—ã –º–æ–∂–µ–º –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞—à—É —Ñ–æ—Ä–º—É —Å –ø–æ–º–æ—â—å—é —Ç–µ–≥–∞ {{form}}.
        message = '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É'
        return render(request, 'sem4/form_game.html',
                      {'form': form, 'message': message})



# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ4
# üìå –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –∞–≤—Ç–æ—Ä—É —Å–æ–∑–¥–∞–π—Ç–µ —Ñ–æ—Ä–º—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π —Å—Ç–∞—Ç—å–∏.
# üìå –ê–≤—Ç–æ—Ä —Å—Ç–∞—Ç—å–∏ –¥–æ–ª–∂–µ–Ω –≤—ã–±–∏—Ä–∞—Ç—å—Å—è –∏–∑ —Å–ø–∏—Å–∫–∞ (–≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∞–≤—Ç–æ—Ä—ã).

# def add_author(request):
#     if request.method == 'POST':
#         form = AuthorForm(request.POST)
#         if form.is_valid():
#             name = form.data['name']
#             email = form.data['email']
#             author = Author(name=name, email=email)
#             author.save()
#             return render(request, 'sem4/result.html')
#     else:
#         form = AuthorForm()
#         return render(request, 'sem4/add_author.html', {'form': form})


# def add_post(request):
#     if request.method == 'POST':
#         form = PostForm(request.POST)
#         if form.is_valid():
#             title = form.data['title']
#             content = form.data['content']
#             author = form.data['author']
#             post = Post(title=title,content=content,author=author)
#             post.save()
#             return render(request, 'sem4/result.html')
#     else:
#         form = PostForm()
#         return render(request, 'sem4/add_post.html', {'form': form})